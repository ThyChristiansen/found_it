{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/boxReducer.js","redux/reducers/boxDetailReducer.js","redux/reducers/qrCodeReducer.js","redux/reducers/itemReducer.js","redux/reducers/roomReducer.js","redux/reducers/roomNameReducer.js","redux/reducers/searchItemReducer.js","redux/reducers/houseNameReducer.js","redux/reducers/allBoxReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/boxSaga.js","redux/sagas/boxDetailSaga.js","redux/sagas/deleteBoxSaga.js","redux/sagas/itemSaga.js","redux/sagas/deleteItemSaga.js","redux/sagas/updateItemSaga.js","redux/sagas/roomSaga.js","redux/sagas/roomNameSaga.js","redux/sagas/seachSaga.js","redux/sagas/houseSaga.js","redux/sagas/index.js","components/Footer/Footer.js","components/SearchBar/SearchBar.js","components/LogOutButton/LogOutButton.js","components/Header/Header.js","components/AboutPage/AboutPage.js","components/Room/Room.js","components/UserPage/HomePage.js","components/UserPage/CreateRoomList.js","components/UserPage/UserPage.js","components/Box/Box.js","components/BoxList/BoxList.js","components/DownloadQRCode/DownloadQRCode.js","components/Item/Item.js","components/BoxDetail/BoxDetail.js","components/Reader/Reader.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","loginMode","userReducer","payload","boxReducer","boxDetailReducer","qrCodeReducer","itemReducer","roomReducer","roomNameReducer","searchItemReducer","houseNameReducer","allBoxReducer","rootReducer","errors","user","boxes","detail","qrCode","item","rooms","roomName","searchItem","houseName","allBox","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","console","log","response","status","takeLatest","registerUser","registrationSaga","fetchUser","userSaga","get","data","boxSaga","fetchBox","addBox","addFirstBoxInRoom","updateBoxStatus","room_id","roomId","boxId","boxDetailSaga","fetchDetail","id","deleteBoxSaga","deleteBox","delete","itemSaga","fetchItems","addItem","takeEvery","itemData","file","FormData","append","Object","entries","key","value","deleteItemSaga","deleteItem","itemId","updateItemSaga","updateItem","roomSaga","fetchRoom","createRoom","userId","roomNameSaga","getRoomName","searchSaga","searchEmptyItem","searchValue","fetchHouseName","createHouseName","rootSaga","all","seachSaga","houseSaga","Footer","SearchBar","props","handleChangeFor","event","setState","target","dispatch","setWrapperRef","bind","handleClickOutside","document","addEventListener","this","removeEventListener","node","wrapperRef","contains","resultSearching","length","reduxState","className","map","room_name","to","box_name","classes","ref","root","search","searchIcon","InputBase","placeholder","inputRoot","input","inputInput","inputProps","onChange","Component","connect","withStyles","theme","flexGrow","paddingBottom","paddingRight","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","breakpoints","up","spacing","padding","height","pointerEvents","display","alignItems","justifyContent","color","paddingLeft","transition","transitions","create","onClick","Header","menu","handleCloseNav","handleListKeyDown","preventDefault","Paper","paper","MenuList","onKeyDown","MenuItem","marginRight","float","AboutPage","href","title","RoomList","handleOnClick","history","push","roomData","src","alt","withRouter","HomePage","house_name","room","Room","BootstrapInput","border","fontSize","fontFamily","join","boxShadow","borderColor","ColorButton","getContrastText","Button","CreateRoomList","button","welcome","handleHouseNameChangeFor","handleClick","alert","alignItemsAndJustifyContent","FormControl","margin","variant","givenName","username","given_name","Box","box","boxName","boxStatus","BoxList","handleOnClickAddNewBox","match","params","Swal","mixin","toast","showConfirmButton","timer","onOpen","stopTimer","resumeTimer","fire","icon","handleOnClickAddFirstBoxInRoom","handleBackToRoomList","addNewBox","index","Grid","container","justify","textAlign","DownloadQRCode","downloadQR","pngUrl","getElementById","qr_code","toDataURL","replace","downloadLink","createElement","download","body","appendChild","click","removeChild","size","level","includeMargin","marginTop","Item","itemIsEditable","handleDelete","box_id","editItem","saveItem","keyPressed","picture","media_url","onKeyPress","ColorButton1","ColorButton2","BoxDetail","backClick","handleInputChangeFor","handlePictureChangeFor","files","handleAddNewItem","handleClearInput","handleSubmit","sendRoomIdToItem","handleDeleteBox","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","background","handleUnBox","backdrop","accept","flexWrap","marginBottom","align","Reader","handleScan","handleError","err","error","delay","onError","onScan","rel","LoginPage","password","login","propertyName","responseGoogle","profileObj","email","googleId","role","m","onSubmit","htmlFor","TextField","label","name","clientId","process","buttonText","onSuccess","onFailure","cookiePolicy","RegisterPage","ComponentToShow","ComponentToProtect","component","otherProps","App","exact","from","path","UserPage","render","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","run","ReactDOM"],"mappings":"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","file":"static/js/main.a52a7d4f.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const boxReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_BOX':\n          // console.log('----->set this boxes', action.payload)\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n\n  export default boxReducer;\n  ","const boxDetailReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_DETAIL':\n          // console.log('----->set this boxs detail', action.payload)\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n \n  export default boxDetailReducer;\n  ","const qrCodeReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_QR_CODE':\n          // console.log('----->set this qr code', action.payload)\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  export default qrCodeReducer;\n  ","const itemReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_ITEM':\n          // console.log('set this item', action.payload)\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n \n  export default itemReducer;\n  ","const roomReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_ROOM':\n          // console.log('----->set this rooms', action.payload)\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n\n  export default roomReducer;\n  ","const roomNameReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_ROOM_NAME':\n          // console.log('---------> send this room name to client', action.payload)\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n \n  export default roomNameReducer;\n  ","const searchItemReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_ITEM_SORT':\n          // console.log('----->SET_ITEM_SORT', action.payload)\n        return action.payload;\n        case 'SET_ITEM_EMPTY':\n          // console.log('----->SET_ITEM_EMPTY', action.payload)\n        return {};\n      default:\n        return state;\n    }\n  };\n  \n  export default searchItemReducer;\n  ","const houseNameReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_HOUSE_NAME':\n          // console.log('----->set this house name', action.payload)\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n\n  export default houseNameReducer;\n  ","const allBoxReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_ALL_BOX':\n          // console.log('----->set all box', action.payload)\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n\n  export default allBoxReducer;\n  ","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport boxes from './boxReducer';\nimport detail from './boxDetailReducer';\nimport qrCode from './qrCodeReducer';\nimport item from './itemReducer';\nimport rooms from './roomReducer';\nimport roomName from './roomNameReducer';\nimport searchItem from './searchItemReducer';\nimport houseName from './houseNameReducer';\nimport allBox from './allBoxReducer';\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  boxes,\n  detail,\n  qrCode,\n  item,\n  rooms,\n  roomName,\n  searchItem,\n  houseName,\n  allBox,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n    // console.log('send this user to server-side:', action.payload);\n\n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n    // console.log('send this user to server-side:', action.payload);\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* boxSaga() {\n  yield takeLatest('FETCH_BOX', fetchBox);\n  yield takeLatest('ADD_BOX', addBox);\n  yield takeLatest('ADD_FIRST_BOX_IN_ROOM', addFirstBoxInRoom);\n  yield takeLatest('UNBOX', updateBoxStatus);\n\n}\n\n// worker Saga: will be fired on \"FETCH_BOXES\" actions\nfunction* fetchBox(action) {\n  let room_id = action.payload.roomId\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n    const response = yield axios.get(`/api/box/${room_id}`, config);\n\n    yield put({\n      type: 'SET_BOX',\n      payload: response.data\n    });\n  } catch (error) {\n    console.log('Box get request failed', error);\n  }\n}\n\n// worker Saga: will be fired on \"ADD_BOX\" actions\nfunction* addBox(action) {\n  try {\n    let roomId = action.payload.roomId\n    // console.log('--------> in add box', roomId)\n    yield axios.post(`/api/box/${roomId}`);\n    // console.log('---> send room id of this box to server:', roomId)\n    // automatically log a user in after registration\n    yield put({\n      type: 'FETCH_BOX',\n      payload: { roomId: roomId }\n    });\n  } catch (error) {\n    console.log('Error with add new box:', error);\n  }\n}\n\nfunction* addFirstBoxInRoom(action) {\n  try {\n    let roomId = action.payload.roomId\n    // console.log('--------> in add first box', roomId)\n    yield axios.post(`/api/box/firstboxInRoom/${roomId}`);\n    // console.log('---> send room id of this box to server:', roomId)\n    yield put({\n      type: 'FETCH_BOX',\n      payload: { roomId: roomId }\n    });\n  } catch (error) {\n    console.log('Error with add first box:', error);\n  }\n}\n\n// worker Saga: will be fired on \"UPDATE_BOX_STATUS\" actions\nfunction* updateBoxStatus(action) {\n  try {\n    let boxId = action.payload.boxId\n    let roomId = action.payload.roomId\n\n    // console.log('---> from update box status,send this box id:', boxId)\n    yield axios.put(`/api/box/${boxId}`);\n    // console.log('---> send this item to server:', boxId)\n    yield put({\n      type: 'FETCH_BOX',\n      payload: { roomId: roomId }\n    });\n  } catch (error) {\n      console.log('Error with update box:', error);\n  }\n}\n\nexport default boxSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* boxDetailSaga() {\n  yield takeLatest('FETCH_DETAIL', fetchDetail);\n}\n\n// worker Saga: will be fired on \"FETCH_DETAIL\" actions\nfunction* fetchDetail(action) {\n    let id = action.payload.id\n    let roomId = action.payload.roomId\n\n    // console.log('-----------> room id:', roomId)\n    try {\n        const config = {\n            headers: { 'Content-Type': 'application/json' },\n            withCredentials: true,\n          };\n        const response = yield axios.get(`/api/box/${roomId}/${id}`, config);\n        // console.log('--------in getDetail', response.data);\n        // console.log('-----------> room id:', roomId)\n\n        yield put({\n            type: 'SET_DETAIL', // set action type = SET_DETAIL\n            payload: response.data// set payload equal dispatch that we got from `MovieItem.js`\n        })\n    } catch (err) {\n        console.log('Error in get detail', err);\n    }\n}\n\n\n\n\nexport default boxDetailSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* deleteBoxSaga() {\n  yield takeLatest('DELETE_BOX', deleteBox);\n}\n\nfunction* deleteBox(action) {\n  try {\n    let boxId = action.payload.boxId\n    let roomId = action.payload.roomId\n    yield axios.delete(`/api/box/${boxId}`);\n    // console.log('--->qr_code for this box:', action.payload.boxId)\n    yield put({\n      type: 'FETCH_BOX',\n      payload: {roomId : roomId}\n    });\n  } catch (error) {\n    console.log('Error with deletebox:', error);\n  }\n}\n\n\n\nexport default deleteBoxSaga;\n","import axios from 'axios';\n\nimport { put, takeEvery, takeLatest } from 'redux-saga/effects';\n// const FormData = require('form-data');\n\n\n\nfunction* itemSaga() {\n  yield takeEvery('FETCH_ITEMS', fetchItems);\n  yield takeLatest('ADD_ITEM', addItem);\n}\n\n// worker Saga: will be fired on \"FETCH_ITEMS\" actions\nfunction* fetchItems(action) {\n  let id = action.payload.id\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n    const response = yield axios.get(`/api/item/${id}`, config);\n    yield put({\n      type: 'SET_ITEM', // set action type = SET_DETAIL\n      payload: response.data// set payload equal dispatch that we got from `MovieItem.js`\n    })\n  } catch (err) {\n    console.log('Error in get item', err);\n  }\n}\n\n// function* addItem(action) {\n//   try {\n//     let boxId = action.payload.itemData.id\n//     let roomId = action.payload.itemData.roomId\n//     let item = action.payload.itemData.item\n\n//     console.log('----------->from addItem get this room id', roomId);\n//     console.log('add this item', action.payload.itemData.item);\n//     yield axios.post(`/api/item/${roomId}/${boxId}`, action.payload);\n//     // console.log('send this item to server', action.payload.itemData.item);\n//     yield put({\n//       type: 'FETCH_ITEMS',\n//       payload: {\n//         id: boxId,\n//         roomId: roomId\n//       }\n//     });\n\n\n//   } catch (error) {\n//     console.log('Error with add new item:', error);\n//   }\n// }\n\nfunction* addItem(action) {\n  try {\n    let boxId = action.payload.itemData.id\n    let roomId = action.payload.itemData.roomId\n    let item = action.payload.itemData.item\n\n    if (action.payload.file === \"\") {\n      yield axios.post(`/api/item/withoutImg/${roomId}/${boxId}`, action.payload.itemData);\n      // console.log('------> item', action.payload.itemData)\n    } else {\n      const data = new FormData();\n      data.append('file', action.payload.file)\n\n      for (const [key, value] of Object.entries(action.payload.itemData)) {\n        data.append(key, value);\n      }\n\n      // console.log('----------->formdata', action.payload.file.type);\n      // console.log('----------->item data', action.payload.itemData.item);\n      // console.log('----------->from addItem get this room id', roomId);\n      // console.log('add this item', action.payload);\n\n      yield axios.post(`/api/item/${roomId}/${boxId}`, data, {\n        headers: {\n          'accept': 'application/json',\n          'Accept-Language': 'en-US,en;q=0.8',\n          'Content-Type': action.payload.file.type,\n        }\n      });\n    }\n    // console.log('send this item to server', action.payload.itemData.item);\n    yield put({\n      type: 'FETCH_ITEMS',\n      payload: {\n        id: boxId,\n        roomId: roomId\n      }\n    });\n\n  } catch (error) {\n    console.log('Error with add new item:', error);\n  }\n}\n\nexport default itemSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* deleteItemSaga() {\n    yield takeLatest('DELETE_ITEM', deleteItem);\n  }\n\nfunction* deleteItem(action) {\n  try {\n    // console.log('---> id for this item:', action.payload.itemId)\n    let boxId = action.payload.boxId\n    let roomId = action.payload.roomId\n\n    // console.log('-----------> id for this room:',roomId)\n    yield axios.delete(`/api/item/${action.payload.itemId}`);\n    // console.log('---> id for this item:', action.payload.itemId)\n    yield put({\n      type: 'FETCH_ITEMS',\n      payload: {\n        id : boxId,\n        roomId: roomId,\n      }\n    });\n  } catch (error) {\n      console.log('Error with delete item:', error);\n  }\n}\n\nexport default deleteItemSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* updateItemSaga() {\n    yield takeLatest('UPDATE_ITEM', updateItem);\n  }\n\nfunction* updateItem(action) {\n  try {\n    // console.log('---> id for this item:', action.payload.itemId)\n        // console.log('---> send this item:', action.payload.item)\n\n    let itemId = action.payload.itemId\n    let boxId = action.payload.boxId\n    let item = action.payload.item\n    // console.log('---> id for this item:',itemId)\n    yield axios.put(`/api/item/${itemId}`,action.payload );\n    // console.log('---> send this item to server:', item)\n    // console.log('---> id for this item:', action.payload.itemId)\n    yield put({\n      type: 'FETCH_ITEMS',\n      payload: {id : boxId}\n    });\n  } catch (error) {\n      console.log('Error with update item:', error);\n  }\n}\n\nexport default updateItemSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* roomSaga() {\n  yield takeLatest('FETCH_ROOM', fetchRoom);\n  yield takeLatest('CREATE_ROOM_LIST', createRoom);\n}\n\n// worker Saga: will be fired on \"FETCH_ROOM\" actions\nfunction* fetchRoom(action) {\n  try {\n    let userId = action.payload.userId\n    // console.log('user id', userId)\n    const response = yield axios.get(`/api/room/${userId}`);\n    // console.log('----> Send this rooms to reducer', response.data)\n\n    yield put({ type: 'SET_ROOM', payload: response.data });\n  } catch (error) {\n    console.log('Room get request failed', error);\n  }\n}\n\nfunction* createRoom(action) {\n  try {\n    let userId = action.payload.userId\n    // console.log('----------->from createRoom', userId);\n    yield axios.post('/api/room', action.payload);\n    // console.log('send this id of user to server', action.payload);\n    yield put({\n      type: 'FETCH_ROOM',\n      payload: {userId : userId}\n    });\n\n  } catch (error) {\n    console.log('Error with add new item:', error);\n  }\n}\n\n\nexport default roomSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* roomNameSaga() {\n  yield takeLatest('FETCH_ROOM_NAME', getRoomName);\n\n}\n\n// worker Saga: will be fired on \"FETCH_BOXES\" actions\nfunction* getRoomName(action) {\n  let room_id = action.payload.roomId\n  // console.log('----> from get room name send this id to server id:', room_id)\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n    const response = yield axios.get(`/api/roomName/${room_id}`, config);\n    // console.log('----> from get room name send this name to reducer', response.data)\n\n    yield put({\n      type: 'SET_ROOM_NAME',\n      payload: response.data\n    });\n  } catch (error) {\n    console.log('Box get request failed', error);\n  }\n}\n\nexport default roomNameSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* searchSaga() {\n    yield takeLatest('SEARCH_ITEM', searchItem);\n    yield takeLatest('SEARCH_EMPTY', searchEmptyItem);\n\n\n}\n\nfunction* searchItem(action) {\n    let searchValue = action.payload.searchItem;\n    // console.log('------->in searchItem:', searchValue);\n    try {\n        const response = yield axios.get(`/api/search/${searchValue}`);\n        // console.log('------->in searchItem:', searchValue);\n        yield put({\n            type: 'SET_ITEM_SORT', // set action type = SET_ITEM_SORT\n            payload: response.data\n        })\n    } catch (err) {\n        console.log('Error in ERROR in GET request for searchSaga', err);\n    }\n}\n\nfunction* searchEmptyItem(action) {\n    let searchValue = action.payload.searchItem;\n    // console.log('------->in searchItem:', searchValue);\n    try {\n        yield put({\n            type: 'SET_ITEM_EMPTY',\n        })\n    } catch (err) {\n        console.log('Error in ERROR in GET request for searchSaga', err);\n    }\n}\n\n\nexport default searchSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* roomSaga() {\n  yield takeLatest('CREATE_HOUSE_NAME', createHouseName);\n  yield takeLatest('FETCH_HOUSE_NAME', fetchHouseName);\n}\n\n// worker Saga: will be fired on FETCH_HOUSE_NAME actions\n\nfunction* fetchHouseName(action) {\n  try {\n    //create an variable named userId to assign the data that was sent from client-side to it\n    // console.log('user id', userId)\n    const response = yield axios.get(`/api/house/`); //using axios to send the GET request to server-side\n    // console.log('----> Send this house name to reducer', response.data)\n    yield put({ type: 'SET_HOUSE_NAME', payload: response.data });\n  } catch (error) {\n    console.log('House name get request failed', error);\n  }\n}\n\n// worker Saga: will be fired on \"CREATE_HOUSE_NAME\" actions\nfunction* createHouseName(action) {\n  try {\n    let userId = action.payload.userId\n    // console.log('----------->from createHouseName', userId);\n    yield axios.post('/api/house', action.payload); //using axios to send the POST request to server-side\n    // console.log('send this id of user and room name to server', action.payload);\n   //Refesh the DOM right after created house's name\n    yield put({ \n      type: 'FETCH_ROOM',\n      payload: {userId : userId}\n    });\n\n  } catch (error) {\n    console.log('Error with add house name:', error);\n  }\n}\n\n\n\nexport default roomSaga;\n","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport boxSaga from './boxSaga';\nimport detail from './boxDetailSaga';\nimport deleteBoxSaga from './deleteBoxSaga';\nimport itemSaga from './itemSaga';\nimport deleteItemSaga from './deleteItemSaga';\nimport updateItemSaga from './updateItemSaga';\nimport roomSaga from './roomSaga';\nimport roomNameSaga from './roomNameSaga';\nimport seachSaga from './seachSaga';\nimport houseSaga from './houseSaga';\n\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    boxSaga(),\n    detail(),\n    deleteBoxSaga(),\n    itemSaga(),\n    deleteItemSaga(),\n    updateItemSaga(),\n    roomSaga(),\n    roomNameSaga(),\n    seachSaga(),\n    houseSaga(),\n  ]);\n}\n","import React from 'react';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer>\n    &copy; Thy Christiansen\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './SearchBar.css'\n\nimport { withStyles } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        paddingBottom: '7px',\n        paddingRight: '10px',\n\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingRight: '100px'\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n});\n\nclass SearchBar extends Component {\n    //Create state to storing value of in input field\n    state = {\n        searchItem: ''\n    }\n    //handle change for search input field and by the same time send the action SEARCH_ITEM to Saga\n    handleChangeFor = (event) => {\n        this.setState({\n            searchItem: event.target.value\n        });\n        this.props.dispatch({\n            type: 'SEARCH_ITEM',\n            payload: {\n                searchItem: this.state.searchItem,\n            }\n        })\n    }\n    //----------------------Close nav list if click outside------------------------------------------\n    constructor(props) {\n        super(props);\n\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    //  Close dropdown nav list if clicked on outside of element\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.setState({\n                searchItem: ''\n            })\n        }\n    }\n    //----------------------------------------------------------------\n\n\n\n\n    render() {\n        //If the value inside the search bar is empty, return result of searching will empty.\n        //if the result of the searching is not match with any item inside the boxes, return Result searching is empty.\n        //if the result of the searching is match with items that inside the boxes, return room name, box name.\n        let resultSearching;\n        if (this.state.searchItem.length === 0) {\n            resultSearching = ''\n        } else if (this.props.reduxState.searchItem.length === 0) {\n            resultSearching = <p className=\"search_item\">Result is empty</p>\n        }\n        else if (this.props.reduxState.searchItem.length !== 0) {\n            resultSearching = this.props.reduxState.searchItem.map((item) => {\n                //Condition for box's name base on each room's name\n                if (item.room_name === 'Storage') {\n                    return (\n                        <div key={item.id} className=\"search_item\">\n                            <Link to={`/box-detail/${item.room_id}/${item.id}`}>\n                                <p className=\"search-text\">\n                                    <span>{item.room_name}</span> <span> A{item.box_name}</span>\n                                </p>\n                            </Link>\n                        </div>\n                    )\n                } else if (item.room_name === 'Basement') {\n                    return (\n                        <div key={item.id} className=\"search_item\">\n                            <Link to={`/box-detail/${item.room_id}/${item.id}`}>\n                                <p className=\"search-text\">\n                                    <span>{item.room_name}</span> <span> B{item.box_name}</span>\n                                </p>\n                            </Link>\n                        </div>\n                    )\n                } else if (item.room_name === 'Garage') {\n                    return (\n                        <div key={item.id} className=\"search_item\">\n                            <Link to={`/box-detail/${item.room_id}/${item.id}`}>\n                                <p className=\"search-text\">\n                                    <span>{item.room_name}</span> <span> C{item.box_name}</span>\n                                </p>\n                            </Link>\n                        </div>\n                    )\n                } else if (item.room_name === 'Livingroom') {\n                    return (\n                        <div key={item.id} className=\"search_item\">\n                            <Link to={`/box-detail/${item.room_id}/${item.id}`}>\n                                <p className=\"search-text\">\n                                    <span>{item.room_name}</span> <span> D{item.box_name}</span>\n                                </p>\n                            </Link>\n                        </div>\n                    )\n                } else if (item.room_name === 'Bedroom') {\n                    return (\n                        <div key={item.id} className=\"search_item\">\n                            <Link to={`/box-detail/${item.room_id}/${item.id}`}>\n                                <p className=\"search-text\">\n                                    <span>{item.room_name}</span> <span> E{item.box_name}</span>\n                                </p>\n                            </Link>\n                        </div>\n                    )\n                } else if (item.room_name === 'Kitchen') {\n                    return (\n                        <div key={item.id} className=\"search_item\">\n                            <Link to={`/box-detail/${item.room_id}/${item.id}`}>\n                                <p className=\"search-text\">\n                                    <span>{item.room_name}</span> <span> F{item.box_name}</span>\n                                </p>\n                            </Link>\n                        </div>\n                    )\n                } else {\n                    return \"empty\"\n                }\n            })\n        }\n        const { classes } = this.props;\n        return (\n            <div>\n                {/* Handle on click out side */}\n                <div ref={this.setWrapperRef}>\n                    <div className={classes.root}>\n                        <div className={classes.search}>\n                            <div className={classes.searchIcon}>\n                                <SearchIcon item />\n                            </div>\n                            <InputBase item\n                                placeholder=\"Search…\"\n                                classes={{\n                                    root: classes.inputRoot,\n                                    input: classes.inputInput,\n                                }}\n                                inputProps={{ 'aria-label': 'search' }}\n                                onChange={this.handleChangeFor}\n                                value={this.state.searchItem}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"result_search\">{resultSearching}</div>\n                </div>\n               \n                {/* <h1>{JSON.stringify(this.props.reduxState.searchItem.length)}</h1> */}\n            </div>\n        )\n    }\n}\n\nconst putReduxStateToProps = (reduxState) => ({ reduxState });\nexport default connect(putReduxStateToProps)(withStyles(useStyles)(SearchBar));\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './Nav.css';\nimport SearchingBar from '../SearchBar/SearchBar';\nimport LogOut from '../LogOutButton/LogOutButton';\n\n//-----------------------Styling----------------------------------\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n//-----------------------Styling----------------------------------\n\nconst useStyles = (theme) => ({\n    root: {\n        paddingLeft: '10px',\n\n    },\n    paper: {\n        marginRight: theme.spacing(10),\n        backgroundColor: \"#efede7\",\n        float: 'left',\n    },\n});\n\nclass Header extends Component {\n    state = {\n        menu: false,\n    }\n    //----------------------Close nav list if click outside------------------------------------------\n    constructor(props) {\n        super(props);\n\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    //  Close dropdown nav list if clicked on outside of element\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.setState({\n                menu: false\n            })\n        }\n    }\n    //----------------------------------------------------------------\n\n    handleCloseNav = () => {\n        // console.log('click!')\n        this.setState({\n            menu: !this.state.menu\n        })\n    }\n\n    handleListKeyDown = (event) => {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            this.setState({\n                menu: !this.state.menu\n            })\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        //Create if statement to hide and show nav table drop down\n        let menu;\n        if (this.state.menu) {\n            menu = <div className=\"nav\">\n\n                <Paper className={classes.paper}>\n                    <MenuList id=\"menu-list-grow\" onKeyDown={this.handleListKeyDown}>\n                        <MenuItem onClick={this.handleCloseNav}>\n                            <Link className=\"nav-link\" to=\"/home\">\n                                {/* Show this link if they are logged in or not,\n                                        but call this link 'Home' if they are logged in,\n                                        and call this link 'Login / Register' if they are not */}\n                                {this.props.user.id ? 'Home' : 'Login / Register'}\n                            </Link>\n                        </MenuItem>\n                        <MenuItem onClick={this.handleCloseNav}>\n                            {/* Show the link to the info page and the logout button if the user is logged in */}\n                            {this.props.user.id && (\n                                <><Link className=\"nav-link\" to=\"/scanner\">Scanner </Link><br /></>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleCloseNav}>\n                            <Link className=\"nav-link\" to=\"/about\">About</Link><br />\n                        </MenuItem>\n                        <MenuItem onClick={this.handleCloseNav}>\n                            {/* Always show this link since the about page is not protected */}\n                            {this.props.user.id && (\n                                <><LogOut className=\"logOut-btn\" /></>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Paper>\n            </div>\n        }\n        return (\n            <div >\n                <div>\n                    {this.props.user.id && (\n                        <>\n                            {/* Assigning link for header */}\n                            <div className=\"header\">\n                                <Link to=\"/home\">\n                                    <h1 className=\"header_title\">FOUND IT</h1>\n                                </Link>\n                               \n                                    <div className=\"search_bar\"><SearchingBar /></div>\n                                    <span onClick={this.handleCloseNav}>\n                                        <MenuIcon className={classes.root} /></span>\n                                    {/* Menu drop down */}\n                                    <div ref={this.setWrapperRef}>{menu}</div>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.user,\n});\n\nexport default connect(mapStateToProps)(withStyles(useStyles)(Header));\n","import React from 'react';\nimport Header from '../Header/Header';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst AboutPage = () => (\n  <div>\n    <Header />\n\n    <div className='techs'>\n      <h2 className='title'>Technologies</h2>\n      <p> HTML | CSS  | Express | Node | React | Redux | Sagas | Postico PostgreSQL | Passport | Heroku PostgreSQL | Nodemailer | Material-UI | SweetAlert2</p>\n    </div><br />\n    <div className=\"attribution\">\n      <h2 className='title'>Attribution</h2>\n\n      Icons made by <a href=\"http://www.freepik.com/\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\n      <div>Icons made by <a href=\"https://www.flaticon.com/authors/srip\" title=\"srip\">srip</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n      <div>Icons made by <a href=\"https://www.flaticon.com/free-icon/box_685387\" title=\"Good Ware\">Good Ware</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div></div>\n  </div>\n\n);\n\nexport default AboutPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router\";\nimport './RoomList.css'\n// import { Link } from 'react-router-dom';\n\nclass RoomList extends Component {\n    handleOnClick = () => {\n        // console.log('room clicked!')\n        this.props.history.push(`/box-list/${this.props.roomData.id}`)\n\n    }\n\n    render() {\n        return (\n            <div onClick={this.handleOnClick}>\n                {/* <h1>{JSON.stringify(this.props.reduxState.rooms)}</h1> */}\n                {/* Set Link for each room icon so that the user can click on the box icon and navigate to the detail inside room */}\n                {/* <Link to={`/box-list/${this.props.roomData.id}`}> */}\n                <img src=\"images/room_icon.png\"\n                    alt=\"room_icon\"\n                    width=\"100px\"\n                    height=\"100px\"\n                ></img>\n                {/* Room's mame */}\n                <p className=\"room_name_in_list_room\">{this.props.roomData.room_name}</p>\n                {/* </Link> */}\n            </div >\n        )\n    }\n}\nconst putReduxStateToProps = (reduxState) => ({ reduxState });\nexport default withRouter(connect(putReduxStateToProps)(RoomList));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Room from '../Room/Room';\nimport './UserPage.css'\n\nclass HomePage extends Component {\n    componentDidMount() {\n        //Send this action to Saga to show the house's name \n        this.props.dispatch({\n            type: \"FETCH_HOUSE_NAME\",\n            payload: {\n                userId: this.props.userId\n            }\n        });\n    }\ngit\n    render() {\n        return (\n            <div className = \"room_list\">\n                {/* Mapping through the houseName reducer and display the house's name */}\n                <h1 className=\"house_name\">{this.props.reduxState.houseName.map((event) => event.house_name)}</h1>\n\n                {/* Mapping through the rooms reducer and display the list of room name */}\n                {this.props.reduxState.rooms.map((room) => {\n                    return (\n                        <div key={room.id} className=\"room\">\n                            {/* I keep each room inside of the Room component */}\n                            <Room\n                                roomData={room}\n                            />\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n//set the reduxState inside props and putReduxStateToProps variable inside the conneect\n//so that I can get get data from the reducers\nconst putReduxStateToProps = (reduxState) => ({ reduxState });\nexport default connect(putReduxStateToProps)(HomePage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport HomePage from '../UserPage/HomePage';\n\n//-----------------------Styling----------------------------------\nimport { fade, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputBase from '@material-ui/core/InputBase';\nimport FormControl from '@material-ui/core/FormControl';\n\n//-----------------------Styling----------------------------------\nconst useStyles = (theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    alignItemsAndJustifyContent: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\nconst BootstrapInput = withStyles((theme) => ({\n    input: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        width: '200px',\n        padding: '10px 10px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n            boxShadow: `${fade('#8f8681', 0.25)} 0 0 0 0.3rem`,\n            borderColor: '#8f8681',\n        },\n    },\n}))(InputBase);\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: theme.palette.getContrastText('#FFB92C'),\n        backgroundColor: '#FFB92C',\n        '&:hover': {\n            backgroundColor: '#FFB92C',\n        },\n    },\n}))(Button);\n\nclass CreateRoomList extends Component {\n\n    //Create state to store button, welcome message and houseName that user will type in when they are create the house's name\n    state = {\n        button: true, //I want to show it when the user \n        welcome: true,\n        houseName: ''\n    }\n\n    //To always update the room list, I put the action FETCH_ROOM inside componentDidMount\n    componentDidMount() {\n        this.props.dispatch({\n            type: \"FETCH_ROOM\",\n            payload: {\n                userId: this.props.userId\n            }\n        });\n    }\n    //handle change for the house's name input field, this will set the houseName property in\n    // the state above to whatever name that user typed in\n    handleHouseNameChangeFor = (event) => {\n        // console.log('changing', event.target.value)\n        this.setState({\n            houseName: event.target.value\n        })\n    }\n    //handle click for create room list. For the new account, this handleClick for Create room list button\n    // will work like when the user click on, it will create a list of rooms then the input field and the button \n    // will disappear after that\n    handleClick = (event) => {\n\n        if (this.state.houseName === '') {\n            alert('Let give your house a name!')\n        } else {\n            this.props.dispatch({\n                type: \"CREATE_ROOM_LIST\",\n                payload: {\n                    userId: this.props.userId\n                }\n            })\n            //set the button, welcome properties in the state above to be false to hide it\n            this.setState({\n                button: false,\n                welcome: false,\n            })\n            //Send the action CREATE_HOUSE_NAME with a couple data in payload to Saga to posting\n            // to data base the house's name\n            this.props.dispatch({\n                type: \"CREATE_HOUSE_NAME\",\n                payload: {\n                    houseName: this.state.houseName,\n                    userId: this.props.userId\n                }\n            })\n            // console.log('---------->send this house name to Saga', this.state.houseName)\n            //After create house's name, I also send the FETCH_HOUSE_NAME to Saga to get house's name right of the bat\n            this.props.dispatch({\n                type: \"FETCH_HOUSE_NAME\",\n                payload: {\n                    userId: this.props.userId\n                }\n            });\n        }\n    }\n\n    render() {\n        //I use if statement to show the input field and the create house name button\n        //if their value is true, and no rooms in this account,\n        // it will display input field, the button and the message welcome\n        const { classes } = this.props;\n\n        let button;\n        let welcome;\n        if (this.state.button && this.props.reduxState.rooms.length === 0) {\n            button = <div className={classes.alignItemsAndJustifyContent}>\n                <FormControl className={classes.margin}>\n                    <BootstrapInput\n                        id=\"bootstrap-input\"\n                        placeholder=\"House's name...\"\n                        value={this.state.item}\n                        onChange={this.handleHouseNameChangeFor} width=\"80%\"\n                    />\n                </FormControl>\n\n                <ColorButton variant=\"outlined\" color=\"primary\" className={classes.margin}\n                    onClick={this.handleClick}>\n                    Create rooms\n                    </ColorButton>\n            </div>\n            welcome = <div className={classes.alignItemsAndJustifyContent}>\n                <h1>Welcome {this.props.givenName}!!!!</h1>\n            </div>\n        }\n        return (\n            <div>\n                {welcome}\n                {button}\n                {/* I put Homepage component in here so that the list of room will show up right in the home page */}\n                <HomePage userId={this.props.userId} />\n            </div >\n        )\n    }\n}\n//set the reduxState inside props and putReduxStateToProps variable inside the conneect\n//so that I can get get data from the reducers\nconst putReduxStateToProps = (reduxState) => ({ reduxState });\nexport default connect(putReduxStateToProps)(withStyles(useStyles)(CreateRoomList));\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport CreateRoomList from '../UserPage/CreateRoomList';\n// this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\n\nimport Header from '../Header/Header';\n\n\nconst UserPage = (props) => (\n  <div>\n    <Header />\n    {/* Send username, userId to createRoomList component */}\n    <CreateRoomList\n    username =  {props.user.username}\n    userId={props.user.id}\n    givenName = {props.user.given_name}\n     />\n  </div>\n);\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n  id: state.id,\n});\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(UserPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router\";\n\n\nclass Box extends Component {\n\n    handleClick = () => {\n        // console.log('clicked');\n        this.props.history.push(`/box-detail/${this.props.box.room_id}/${this.props.box.id}`)\n    }\n\n    render() {\n        // box's name condition for each room \n        let boxName;\n        if (this.props.box.room_name === 'Storage') {\n            boxName = <p className=\"box_name_in_box_list\">A{this.props.box.box_name}</p>\n        } if (this.props.box.room_name === 'Basement') {\n            boxName = <p className=\"box_name_in_box_list\">B{this.props.box.box_name}</p>\n        }\n        if (this.props.box.room_name === 'Garage') {\n            boxName = <p className=\"box_name_in_box_list\">C{this.props.box.box_name}</p>\n        }\n        if (this.props.box.room_name === 'Livingroom') {\n            boxName =\n                <p className=\"box_name_in_box_list\">D{this.props.box.box_name}</p>\n        }\n        if (this.props.box.room_name === 'Bedroom') {\n            boxName =\n                <p className=\"box_name_in_box_list\">E{this.props.box.box_name}</p>\n        }\n        if (this.props.box.room_name === 'Kitchen') {\n            boxName =\n                <p className=\"box_name_in_box_list\">F{this.props.box.box_name}</p>\n        }\n\n        //Use if condition to change the box visual if they was opened or not yet\n        let boxStatus;\n        if (this.props.box.status) {\n            boxStatus = <img\n                src=\"images/box_opening2.png\"\n                alt={this.props.box.box_name}\n                className=\"box_icon\"\n                width=\"85\"\n                height=\"85\"\n            />\n        } else {\n            boxStatus = <img\n                src=\"images/box_icon.png\"\n                alt={this.props.box.box_name}\n                className=\"box_icon\"\n                width=\"85\"\n                height=\"85\"\n            />\n        }\n\n        return (\n            <div>\n                {/* <p>{JSON.stringify(this.props.box.status)}</p> */}\n                {/* Assigning the link to box icon to navigating user to box's detail page  */}\n                <div className= \"item_box_inbox_list\"onClick={this.handleClick}>\n                    {boxStatus}\n                    {boxName}\n                </div>\n            </div>\n        )\n    }\n}\nexport default withRouter(connect()(Box));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Box from '../Box/Box';\nimport './BoxList.css'\nimport Header from '../Header/Header';\nimport Swal from 'sweetalert2';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = (theme) => ({\n    root: {\n        // flexGrow: 1,\n        margin: theme.spacing(1),\n\n    },\n    margin: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        textAlign: 'center',\n    },\n});\n\nclass BoxList extends Component {\n\n    componentDidMount() {\n        // this.props.dispatch({ type: 'FETCH_BOX' })\n        //Send the FETCH_BOX action to Saga via dispatch to get box'list\n        const { dispatch, match } = this.props;\n        dispatch({\n            type: 'FETCH_BOX',\n            payload: {\n                roomId: match.params.id,\n            }\n        });\n        //Send the FETCH_ROOM_NAME action to Saga via dispatch to get room's name\n        dispatch({\n            type: 'FETCH_ROOM_NAME',\n            payload: {\n                roomId: match.params.id,\n            }\n        })\n    }\n    //handle click for add new box button. \n    //When the user click on this button, this handle function will send the ADD_BOX action\n    // to Saga and performing add new box into the boxes table in database\n    //I also send the roomId in payload so that the user can add boxes to different room.\n    handleOnClickAddNewBox = () => {\n        const { dispatch, match } = this.props;\n        // console.log('add new item clicked!');\n        dispatch({\n            type: 'ADD_BOX',\n            payload: {\n                roomId: match.params.id\n            }\n        })\n        const Toast = Swal.mixin({\n            toast: true,\n            position: 'bottom-end',\n            showConfirmButton: false,\n            timer: 2000,\n            onOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer)\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\n            }\n        })\n\n        Toast.fire({\n            icon: 'success',\n            title: 'Added'\n        })\n    }\n    handleOnClickAddFirstBoxInRoom = () => {\n        const { dispatch, match } = this.props;\n        // console.log('add new item clicked!');\n        dispatch({\n            type: 'ADD_FIRST_BOX_IN_ROOM',\n            payload: {\n                roomId: match.params.id\n            }\n        })\n        const Toast = Swal.mixin({\n            toast: true,\n            position: 'bottom-end',\n            showConfirmButton: false,\n            timer: 2000,\n            onOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer)\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\n            }\n        })\n\n        Toast.fire({\n            icon: 'success',\n            title: 'Added'\n        })\n\n    }\n    //handle back to home button\n    handleBackToRoomList = () => {\n        // console.log('BacktoRoomList clicked');\n        this.props.history.push('/home');\n    }\n\n    render() {\n\n        // Create the conditional for add new box, if the all of the room list is empty,\n        // sending the ADD_FIRST_BOX action to server to create the first box have id = 1 \n        // box_name = 1, qr_code = 1.\n        // If inside a specific room is empty, \n        // sending the ADD_FIRST_BOX_IN_ROOM action to server to create the first box have id = increment number from the previous id,\n        // box_name = 1, qr_code = 1.\n        // if box list had a couple boxes, sending the ADD_BOX action to server to keep on \n        //increment number of id, box's name, qr_code, from the last row\n        let addNewBox;\n        if (this.props.reduxState.boxes.length === 0) {\n            addNewBox = <button onClick={this.handleOnClickAddFirstBoxInRoom}\n                className=\"add_new_box_btn\">Add new box</button>\n        } else {\n            addNewBox = <button onClick={this.handleOnClickAddNewBox}\n                className=\"add_new_box_btn\">Add new box</button>\n        }\n\n        const { classes } = this.props;\n\n        return (\n            <div>\n\n                <Header />\n                <div className=\"box_list_page\">\n\n                    {/* Display room's name ‰\n                Maping through the roomName array from reducer then return the room's name  */}\n\n                    {this.props.reduxState.roomName.map((room, index) => {\n                        return (<h1 className=\"room_name_in_box_list\">{room.room_name} </h1>)\n                    })}\n\n                    {/* Display box quantity in the room */}\n                    <p className=\"box_quantity\">Box quantity: {this.props.reduxState.boxes.length}</p>\n\n                    {/* Mapping through tr boxes array that got from reducer and display boxes */}\n                    <div className={classes.root} >\n                        <Grid container spacing={1} justify=\"center\">\n                            <Grid item >\n                                <Grid className={classes.margin}>{addNewBox}</Grid>\n                            </Grid>\n                            {this.props.reduxState.boxes.map((box) => {\n                                return (\n                                    <div key={box.id}>\n                                        <Grid item  >\n                                            <Grid className={classes.margin}> <Box box={box} /></Grid>\n                                        </Grid>\n                                    </div>\n                                )\n                            })}\n                        </Grid>\n\n                    </div>\n                </div>\n                {/* <h1>{JSON.stringify(this.props.reduxState.allBox)}</h1> */}\n            </div>\n        )\n    }\n}\nconst putReduxStateToProps = (reduxState) => ({ reduxState });\nexport default connect(putReduxStateToProps)(withStyles(useStyles)(BoxList));\n","import React, { Component } from 'react';\nimport QRCode from 'qrcode.react';\nimport { connect } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: theme.palette.getContrastText('#cecece'),\n        backgroundColor: '#cecece',\n        '&:hover': {\n            backgroundColor: '#cecece',\n        },\n        boxShadow: '9px 9px 16px #0000004c, -9px -9px 16px rgb(250, 250, 250)'\n    },\n}))(Button);\n\nconst useStyles = (theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n        marginTop: '10px',\n\n    },\n});\n\nclass DownloadQRCode extends Component {\n    downloadQR = () => {\n        const canvas = document.getElementById(this.props.box.qr_code);\n        const pngUrl = canvas\n            .toDataURL(\"image/png\")\n            .replace(\"image/png\", \"image/octet-stream\");\n        let downloadLink = document.createElement(\"a\");\n        downloadLink.href = pngUrl;\n        downloadLink.download = `QR_code_roomId${this.props.box.room_id}_boxId${this.props.box.id}.png`;\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n    };\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <QRCode\n                    id={this.props.box.qr_code}\n                    value={`https://f0undit.herokuapp.com/#/box-detail/${this.props.box.room_id}/${this.props.box.id}`}\n                    size={230}\n                    level={\"H\"}\n                    includeMargin={true}\n                /><br />\n                <ColorButton onClick={this.downloadQR} size=\"small\" className={classes.margin} variant=\"contained\"> Download</ColorButton>\n            </div>\n        )\n    }\n}\nconst putReduxStateToProps = (reduxState) => ({ reduxState });\nexport default connect(putReduxStateToProps)(withStyles(useStyles)(DownloadQRCode));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './Item.css'\n\nimport {\n    fade,\n    withStyles,\n} from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst BootstrapInput = withStyles((theme) => ({\n    input: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        width: '200px',\n        padding: '10px 10px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n            boxShadow: `${fade('#1B5E20', 0.25)} 0 0 0 0.3rem`,\n            borderColor: '#1B5E20',\n        },\n    },\n}))(InputBase);\nconst useStyles = (theme) => ({\n    root: {\n        paddingLeft: '250px',\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n\n});\n\nclass Item extends Component {\n\n    //Create a state to storing the item data and itemIsEditable\n    state = {\n        item: this.props.item.item,\n        itemIsEditable: false\n    }\n\n    //handle delete button\n    //when the user click on delete button, this function will send the DELETE_ITEM action to Saga\n    handleDelete = () => {\n        // console.log('delete clicked');\n        // console.log('delelete this item by this id:', this.props.item.id)\n        this.props.dispatch({\n            type: 'DELETE_ITEM',\n            payload: {\n                itemId: this.props.item.id,\n                boxId: this.props.item.box_id,\n                roomId: this.props.roomId(this.props.item.id),\n            }\n        })\n    }\n    //handle change for add and edit item input field\n    handleChangeFor = (event) => {\n        this.setState({\n            item: event.target.value,\n        })\n    }\n    //Set the itemIsEditable property in state to be true so that when the user click on \n    //the edit item button, the input field and button save will display\n    editItem = () => {\n        this.setState({\n            itemIsEditable: true,\n        });\n    }\n    // handle for Save button, when the user click on the Save button,\n    // this function will send the UPDATE_ITEM action to Saga the perform to update the item after user changing \n    saveItem = () => {\n        this.setState({\n            itemIsEditable: false,\n        });\n        this.props.dispatch({\n            type: 'UPDATE_ITEM',\n            payload: {\n                itemId: this.props.item.id,\n                item: this.state.item,\n                boxId: this.props.item.box_id,\n            }\n        })\n    }\n    keyPressed = (event) => {\n        if (event.key === \"Enter\") {\n            this.saveItem();\n        }\n    }\n    //----------------------Close nav list if click outside------------------------------------------\n    constructor(props) {\n        super(props);\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n    //  Close dropdown nav list if clicked on outside of element\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.setState({\n                itemIsEditable: false\n            })\n        }\n    }\n    //----------------------------------------------------------------\n\n    render() {\n        const { classes } = this.props;\n        let picture = this.props.item.media_url\n\n        return (\n            <div>\n                {this.props.item.picture === \"empty_img\" ?\n                    \"\"\n                    :\n                    <img\n                        src={picture}\n                        alt={picture}\n                        width=\"200\"\n                        height=\"200\"\n                        className=\"item_detail\"\n                    />\n                }\n\n                {/* if itemIsEditable is true, displaying the input field and Save Item button\n                if itemIsEditable is false, displaying item's contend and the Edit Item button as well */}\n                {this.state.itemIsEditable ?\n                    <>\n                        <div ref={this.setWrapperRef} className=\"input_item\">\n                            <span>\n                                <FormControl className={classes.margin}>\n                                    <BootstrapInput\n                                        id=\"bootstrap-input\"\n                                        value={this.state.item}\n                                        onChange={this.handleChangeFor}\n                                        onKeyPress={this.keyPressed}\n                                    />\n                                </FormControl>\n\n                            </span>\n                        </div>\n                    </>\n                    :\n                    <>\n                        <div className=\"input_item\" onClick={this.editItem}>{this.state.item}</div>\n                    </>\n                }\n                <img src=\"images/cancel.png\"\n                    alt=\"room_icon\"\n                    width=\"30px\"\n                    height=\"30px\"\n                    onClick={this.handleDelete}\n                    className='delete_button'\n                ></img>\n            </div>\n        )\n    }\n}\nexport default connect()(withStyles(useStyles)(Item));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DownloadQRCode from '../DownloadQRCode/DownloadQRCode';\nimport Item from '../Item/Item';\nimport './BoxDetail.css';\nimport Header from '../Header/Header';\nimport Swal from 'sweetalert2';\nimport UppyComp from '../UppyComp/UppyComp';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst BootstrapInput = withStyles((theme) => ({\n    root: {\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    input: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        width: '230px',\n        padding: '10px 12px',\n        marginTop: '30px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n    },\n}))(InputBase);\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: theme.palette.getContrastText('#c62828'),\n        backgroundColor: '#c62828',\n        '&:hover': {\n            backgroundColor: '#c62828',\n        },\n        boxShadow: '9px 9px 16px #0000004c, -9px -9px 16px rgb(250, 250, 250)'\n\n    },\n\n}))(Button);\n\nconst ColorButton1 = withStyles((theme) => ({\n    root: {\n        color: theme.palette.getContrastText('#FFB92C'),\n        backgroundColor: '#FFB92C',\n        '&:hover': {\n            backgroundColor: '#FFB92C',\n        },\n        boxShadow: '9px 9px 16px #0000004c, -9px -9px 16px rgb(250, 250, 250)'\n    },\n}))(Button);\nconst ColorButton2 = withStyles((theme) => ({\n    root: {\n        color: theme.palette.getContrastText('#558B2F'),\n        backgroundColor: '#558B2F',\n        '&:hover': {\n            backgroundColor: '#558B2F',\n        },\n        boxShadow: '9px 9px 16px #0000004c, -9px -9px 16px rgb(250, 250, 250)'\n\n    },\n}))(Button);\n\nconst useStyles = (theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing(1),\n        marginTop: '20px',\n\n    },\n    width: {\n        marginTop: '15px',\n        marginLeft: '80px',\n        marginRight: '80px',\n        marginBottom: '15px',\n        margin: theme.spacing(1),\n        align: 'center',\n    },\n\n});\n\n\nclass BoxDetail extends Component {\n    // create state to store the item data\n    state = {\n        item: '',\n        file: '',\n    }\n    componentDidMount() {\n        //Get box's data after refresh page by id\n        const { dispatch, match } = this.props;\n        dispatch({\n            type: 'FETCH_DETAIL',\n            payload: {\n                id: match.params.id,\n                roomId: match.params.roomId,\n            }\n        });\n        //send FETCH_ITEMS action to Saga to get items of the box that user choosed\n        dispatch({\n            type: 'FETCH_ITEMS',\n            payload: {\n                id: match.params.id,\n                roomId: match.params.roomId,\n            }\n        });\n        // console.log('--------->this is box id:', match.params.id)\n        // console.log('--------->this is room id:', match.params.roomId)\n        // console.log('--------->picture:', this.state.picture)\n\n    }\n    //handle come back list box page\n    backClick = () => {\n        const { match } = this.props;\n        // console.log('back clicked');\n        this.props.history.push(`/box-list/${match.params.roomId}`)\n    }\n    //handle changing for add new item input field\n    handleInputChangeFor = (event) => {\n        // console.log('changing', event.target.value)\n        this.setState({\n            item: event.target.value,\n        });\n    }\n\n    handlePictureChangeFor = (event) => {\n        // console.log('changing', event.target.files[0])\n        this.setState({\n            file: event.target.files[0]\n        });\n    }\n\n    //handle add new item button\n    handleAddNewItem = () => {\n        const { dispatch, match } = this.props;\n        // console.log('add new item clicked!');\n\n        dispatch({\n            type: 'ADD_ITEM',\n            payload: {\n                file: this.state.file,\n                itemData: {\n                    item: this.state.item,\n                    id: match.params.id,\n                    roomId: match.params.roomId,\n                }\n            }\n        })\n    }\n\n    handleClearInput = () => {\n        this.setState({\n            item: '',\n            file:''\n        });\n    }\n    //handle add item and clear input field after clicked add button\n    handleSubmit = () => {\n        if (this.state.item === '') {\n            alert('Add items to your list before click button')\n        } else {\n            this.handleAddNewItem();\n            this.handleClearInput();\n\n        }\n    }\n\n    keyPressed = (event) => {\n        if (event.key === \"Enter\") {\n            this.handleSubmit();\n        }\n    }\n    //Create this function to send the roomId to item component to can delete the item inside the chosen box and room\n    sendRoomIdToItem = (roomId) => {\n        const { match } = this.props;\n        return match.params.roomId\n    }\n    //handle delete box\n    handleDeleteBox = () => {\n        // console.log('delete clicked');\n        const { dispatch, match } = this.props;\n        dispatch({\n            type: 'DELETE_BOX',\n            payload: {\n                boxId: match.params.id,\n                roomId: match.params.roomId,\n            }\n        })\n        // console.log('------->box id', match.params.id);\n        //Bringing the user back to the box list after click on delete button\n        this.props.history.push(`/box-list/${match.params.roomId}`)\n    }\n    //Using sweetAlert to confirm delete box\n    Swal = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes!'\n        }).then((result) => {\n            if (result.value) {\n                Swal.fire({\n                    text: 'Deleted!',\n                    width: 150,\n                    padding: '1em',\n                    background: '#fff url()',\n                    showConfirmButton: false,\n                    timer: 1500,\n                })\n                this.handleDeleteBox();\n            }\n        })\n    }\n\n    //handle unbox\n    handleUnBox = () => {\n        // console.log('unbox clicked');\n        const { dispatch, match } = this.props;\n        dispatch({\n            type: 'UNBOX',\n            payload: {\n                boxId: match.params.id,\n                roomId: match.params.roomId,\n            }\n        })\n        // console.log('------->box id', match.params.id);\n        //Bringing the user back to the box list after click on delete button\n        this.props.history.push(`/box-list/${match.params.roomId}`)\n        //using SweetAlert2 to confirming that the box is unboxed\n        Swal.fire({\n            // title: '',\n            width: 0,\n            padding: '1em',\n            background: 'rgba(216, 191, 216, 0) url()',\n            // position: 'center',\n            showConfirmButton: false,\n            timer: 3000,\n            backdrop: `\n            #6a656154\n             url(\"/images/unboxing_giphy.gif\")\n              center bottom\n              no-repeat\n            `\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Header />\n\n                <div className=\"box_detail\">\n                    {/* <h2>{JSON.stringify(this.props.reduxState.detail.map((box) => (box.status)))}</h2> */}\n                    {/* mapping through the box list array to get room_id from database to display in DOM */}\n                    {/* box's name condition for each room */}\n                    {this.props.reduxState.detail.map((box) => {\n                        let boxName;\n                        if (box.room_name === 'Storage') {\n                            boxName = <div key={box.id}>\n                                <h2 onClick={this.backClick} className=\"room_name\">Storage</h2>\n                                <p className=\"box_name\">A{box.box_name}</p>\n                                <DownloadQRCode\n                                    box={box} />\n                            </div>\n\n                        } else if (box.room_name === 'Basement') {\n                            boxName = <div key={box.id}>\n                                <h2 onClick={this.backClick} className=\"room_name\">Basement</h2>\n                                <p className=\"box_name\">B{box.box_name}</p>\n                                <DownloadQRCode\n                                    box={box} />\n                            </div>\n                        }\n                        else if (box.room_name === 'Garage') {\n                            boxName = <div key={box.id}>\n                                <h2 onClick={this.backClick} className=\"room_name\">Garage</h2>\n                                <p className=\"box_name\">C{box.box_name}</p>\n                                <DownloadQRCode\n                                    box={box} />\n                            </div>\n                        }\n                        else if (box.room_name === 'Livingroom') {\n                            boxName = <div key={box.id}>\n                                <h2 onClick={this.backClick} className=\"room_name\">Livingroom</h2>\n                                <p className=\"box_name\">D{box.box_name}</p>\n                                <DownloadQRCode\n                                    box={box} />\n                            </div>\n                        }\n                        else if (box.room_name === 'Bedroom') {\n                            boxName = <div key={box.id}>\n                                <h2 onClick={this.backClick}>Bedroom</h2>\n                                <p className=\"box_name\">E{box.box_name}</p>\n                                <DownloadQRCode\n                                    box={box} />\n                            </div>\n                        }\n                        else if (box.room_name === 'Kitchen') {\n                            boxName = <div key={box.id}>\n                                <h2 onClick={this.backClick} className=\"room_name\">Kitchen</h2>\n                                <p className=\"box_name\">F{box.box_name}</p>\n                                <DownloadQRCode\n                                    box={box} />\n                            </div>\n                        }\n                        return (\n                            boxName\n                        )\n                    })}\n\n                    {/* add new item input field */}\n                    <FormControl className={classes.margin}>\n\n                        <BootstrapInput\n                            placeholder='Add item...'\n                            id=\"bootstrap-input\"\n                            value={this.state.item}\n                            onChange={this.handleInputChangeFor}\n                            onKeyPress={this.keyPressed}\n                        />\n\n                        <input type=\"file\" onChange={this.handlePictureChangeFor} accept=\"image/*\"/>\n\n                        {/* <UppyComp /> */}\n                        <ColorButton2 onClick={this.handleSubmit}\n                            className={classes.width}\n                            size=\"small\" variant=\"contained\"\n                        >Add</ColorButton2>\n\n                    </FormControl>\n\n                    {/* List items */}\n                    <Grid container justify=\"center\" >\n                        <div className=\"list_item\">\n                            {/* Mapping through the item array to display list item in DOM */}\n                            {this.props.reduxState.item.map((item) => {\n                                return (\n                                    <div key={item.id}\n                                        className=\"item\"\n                                    >\n                                        <Item\n                                            item={item}\n                                            boxId={item.box_id}\n                                            roomId={this.sendRoomIdToItem}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </Grid >\n\n                    {/* The condition for unbox button, if the box's status is opening (true), the unbox button is disappear \n                    if the box's status is close(false), the button is appear*/}\n                    {this.props.reduxState.detail.map((box) => {\n                        let boxStatus;\n                        if (!box.status) {\n                            boxStatus = <ColorButton1 onClick={this.handleUnBox} size=\"small\" variant=\"contained\" className={classes.margin}>Unbox</ColorButton1>\n                        }\n                        return boxStatus;\n                    })}\n                    {/* <button className=\"buttons\"> */}\n                    <ColorButton onClick={this.Swal} size=\"small\" variant=\"contained\" color=\"primary\" className={classes.margin} >\n                        Delete\n                    </ColorButton>\n                    {/* </button> */}\n                </div>\n            </div>\n        )\n    }\n}\nconst putReduxStateToProps = (reduxState) => ({ reduxState });\nexport default connect(putReduxStateToProps)(withStyles(useStyles)(BoxDetail));\n","import React, { Component } from 'react'\nimport QrReader from 'react-qr-reader'\nimport Header from '../Header/Header';\nimport './Reader.css';\n\nclass Reader extends Component {\n  state = {\n    result: 'No result'\n  }\n\n  handleScan = data => {\n    if (data) {\n      this.setState({\n        result: data\n      })\n    }\n  }\n  handleError = err => {\n    console.error(err)\n  }\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className = 'reader'>\n          <QrReader\n            delay={300}\n            onError={this.handleError}\n            onScan={this.handleScan}\n            // style={{ width: '400px' }}\n            className='scanner'\n          />\n          <a href={this.state.result} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.result}</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Reader;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './LoginPage.css';\nimport GoogleLogin from 'react-google-login'\n\n\n//-----------------------Styling----------------------------------\n\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { Box } from '@material-ui/core'\n//-----------------------Styling----------------------------------\n\nconst useStyles = (theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  alignItemsAndJustifyContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  width: {\n    width: 230,\n    height: 40,\n\n  },\n  height: {\n    height: 30,\n  }\n});\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  responseGoogle = (response) => {\n    // console.log(response);\n    // console.log(response.profileObj);\n    this.props.dispatch({\n      type: 'LOGIN',\n      payload: {\n        username: response.profileObj.email,\n        password: response.profileObj.googleId,\n      },\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <div className=\"login_header_bar\">\n          <h5 className=\"login_header\">Found it</h5>\n          <img\n            src=\"images/app.png\"\n            alt='scanner_icon'\n            className=\"icon_scanner\"\n            width=\"50\"\n            height=\"50\"\n          />\n        </div>\n        {this.props.errors.loginMessage && (\n          <p className=\"alert\" role=\"alert\">\n            {this.props.errors.loginMessage}\n          </p>\n        )}\n        <div className={classes.alignItemsAndJustifyContent}>\n          <Box m=\"auto\">\n            <form onSubmit={this.login}>\n              <div>\n                <label htmlFor=\"username\">\n                  <div className={classes.margin}>\n                    <Grid container spacing={1} alignItems=\"flex-end\">\n                      <Grid item className={classes.height}>\n                        <AccountCircle />\n                      </Grid>\n                      <Grid item>\n                        <TextField id=\"input-with-icon-grid\"\n                          label=\"Username\"\n                          value={this.state.username}\n                          onChange={this.handleInputChangeFor('username')}\n                          className={classes.width}\n                        />\n                      </Grid>\n                    </Grid>\n                  </div>\n                </label>\n              </div>\n              <div>\n                <label htmlFor=\"password\">\n                  <div className={classes.margin}>\n                    <Grid container spacing={1} alignItems=\"flex-end\">\n                      <Grid item className={classes.height}>\n                        <LockIcon />\n                      </Grid>\n                      <Grid item>\n                        <TextField id=\"input-with-icon-grid\"\n                          label=\"Password\"\n                          type=\"password\"\n                          value={this.state.password}\n                          onChange={this.handleInputChangeFor('password')}\n                          className={classes.width}\n                        />\n                      </Grid>\n                    </Grid>\n                  </div>\n                </label>\n              </div>\n              <div>\n                <div className={classes.alignItemsAndJustifyContent}>\n                  <Grid item>\n                    <input\n                      className=\"log-in\"\n                      type=\"submit\"\n                      name=\"submit\"\n                      value=\"Log In\"\n                    />\n                  </Grid>\n                </div>\n                <p>________________or________________</p>\n                <GoogleLogin\n                  clientId={process.env.REACT_APP_CLIENT_ID}\n                  buttonText=\"Login with Google\"\n                  onSuccess={this.responseGoogle}\n                  onFailure={this.responseGoogle}\n                  cookiePolicy={'single_host_origin'}\n                />\n\n              </div>\n            </form>\n            <center>\n              <br />\n              <br />\n              <button\n                type=\"button\"\n                className=\"link-button\"\n                onClick={() => { this.props.dispatch({ type: 'SET_TO_REGISTER_MODE' }) }}\n              >\n                Sign Up\n          </button>\n            </center>\n          </Box >\n        </div>\n      </div>\n\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(withStyles(useStyles)(LoginPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../LoginPage/LoginPage.css';\n\nimport GoogleLogin from 'react-google-login'\n\n//-----------------------Styling----------------------------------\n\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport LockIcon from '@material-ui/icons/Lock';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport { Box } from '@material-ui/core'\nimport Swal from 'sweetalert2';\n\n//-----------------------Styling----------------------------------\n\nconst useStyles = (theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  alignItemsAndJustifyContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  width: {\n    width: 230,\n    height: 40,\n  },\n  height: {\n    height: 30,\n  }\n});\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    email: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n          email: this.state.email,\n        },\n      });\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'bottom-end',\n        showConfirmButton: false,\n        timer: 8000,\n        // timerProgressBar: true,\n        onOpen: (toast) => {\n          toast.addEventListener('mouseenter', Swal.stopTimer)\n          toast.addEventListener('mouseleave', Swal.resumeTimer)\n        }\n      })\n      Toast.fire({\n        icon: 'success',\n        title: \"You just succeeded in creating a new account. Now, let's start!!\"\n      })\n\n    } else {\n      this.props.dispatch({ type: 'REGISTRATION_INPUT_ERROR' });\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  responseGoogle = (response) => {\n    // console.log(response);\n    // console.log(response.profileObj);\n    this.props.dispatch({\n      type: 'REGISTER',\n      payload: {\n        username: response.profileObj.email,\n        email: response.profileObj.email,\n        password: response.profileObj.googleId,\n        givenName:response.profileObj.givenName,\n      },\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        {/* Header for register page */}\n        <div className=\"login_header_bar\">\n          <h5 className=\"login_header\">Welcome to Found it</h5>\n          <img\n            src=\"images/app.png\"\n            alt='scanner_icon'\n            className=\"icon_scanner\"\n            width=\"50\"\n            height=\"50\"\n          />\n        </div>\n\n        {this.props.errors.registrationMessage && (\n          <p className=\"alert\" role=\"alert\" >\n            {this.props.errors.registrationMessage}\n          </p>\n        )}\n        <div className={classes.alignItemsAndJustifyContent}>\n          <Box m=\"auto\">\n            <form onSubmit={this.registerUser}>\n              <p>Create Account</p>\n              <div>\n                <label htmlFor=\"username\">\n                  <div className={classes.margin}>\n                    <Grid container spacing={1} alignItems=\"flex-end\">\n                      <Grid item className={classes.height} >\n                        <AccountCircle />\n                      </Grid>\n                      <Grid item>\n                        <TextField id=\"input-with-icon-grid\"\n                          label=\"Username\"\n                          value={this.state.username}\n                          onChange={this.handleInputChangeFor('username')}\n                          className={classes.width}\n                        />\n                      </Grid>\n                    </Grid>\n                  </div>\n                </label>\n              </div>\n              <div>\n                <label htmlFor=\"email\">\n                  <div className={classes.margin}>\n                    <Grid container spacing={1} alignItems=\"flex-end\">\n                      <Grid item className={classes.height} >\n                        <AlternateEmailIcon />\n                      </Grid>\n                      <Grid item>\n                        <TextField id=\"input-with-icon-grid\"\n                          label=\"Email\"\n                          type=\"text\"\n                          value={this.state.email}\n                          onChange={this.handleInputChangeFor('email')}\n                          className={classes.width}\n                        />\n                      </Grid>\n                    </Grid>\n                  </div>\n                </label>\n              </div>\n              <div>\n                <label htmlFor=\"password\">\n                  <div className={classes.margin}>\n                    <Grid container spacing={1} alignItems=\"flex-end\">\n                      <Grid item className={classes.height} >\n                        <LockIcon />\n                      </Grid>\n                      <Grid item>\n                        <TextField id=\"input-with-icon-grid\"\n                          label=\"Password\"\n                          type=\"password\"\n                          value={this.state.password}\n                          onChange={this.handleInputChangeFor('password')}\n                          className={classes.width}\n                        />\n                      </Grid>\n                    </Grid>\n                  </div>\n                </label>\n              </div>\n              <div>\n\n                <div className={classes.alignItemsAndJustifyContent}>\n                  <Grid item>\n                    <input\n                      className=\"register\"\n                      type=\"submit\"\n                      name=\"submit\"\n                      value=\"Sign Up\"\n                    />\n                  </Grid>\n                </div>\n                <p>________________or________________</p>\n                <GoogleLogin\n                  clientId=\"657071721957-uur1g143dko5qi1v2p33v9r1cfs4dhus.apps.googleusercontent.com\"\n                  buttonText=\"Sign up with Google\"\n                  onSuccess={this.responseGoogle}\n                  onFailure={this.responseGoogle}\n                  cookiePolicy={'single_host_origin'}\n                  onClick={this.registerUser}\n                />\n              </div>\n            </form>\n            <center>\n              <br />\n              <br />\n              <button\n                type=\"button\"\n                className=\"link-button\"\n                onClick={() => { this.props.dispatch({ type: 'SET_TO_LOGIN_MODE' }) }}\n              >\n                Already have an account?\n          </button>\n            </center>\n\n          </Box>\n\n        </div>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\nexport default connect(mapStateToProps)(withStyles(useStyles)(RegisterPage));\n\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\n\n\nimport Footer from '../Footer/Footer'\nimport AboutPage from '../AboutPage/AboutPage'\nimport UserPage from '../UserPage/UserPage';\nimport BoxList from '../BoxList/BoxList';\nimport Box from '../Box/Box';\nimport BoxDetail from '../BoxDetail/BoxDetail';\nimport Item from '../Item/Item';\nimport Reader from '../Reader/Reader';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\nimport {\n  HashRouter,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' })\n  }\n\n  render() {\n \n    return (\n      <HashRouter>\n\n        <div>\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n            {/* Visiting localhost:3000/about will show the about page.\n            This is a route anyone can see, no login necessary */}\n            <Route\n              exact\n              path=\"/about\"\n              component={AboutPage}\n            />\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n            <ProtectedRoute\n              exact\n              path=\"/home\"\n              component={UserPage}\n            />\n\n            <ProtectedRoute\n              path=\"/scanner\"\n              component={Reader}\n            />\n            <ProtectedRoute\n              path=\"/box-list/:id\"\n              component={BoxList}\n            />\n             <ProtectedRoute\n              path=\"/box\"\n              component={Box}\n            />\n\n            <ProtectedRoute\n              exact path=\"/box-detail/:roomId/:id\"\n              component={BoxDetail}\n            />\n            <ProtectedRoute\n              path=\"/item/:id\"\n              component={Item}\n            />\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n\n          <Footer />\n        </div>\n      </HashRouter>\n\n    )\n  }\n}\n\nconst putReduxStateOnState = (reduxState) => ({ reduxState });\n\nexport default connect(putReduxStateOnState)(App);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}